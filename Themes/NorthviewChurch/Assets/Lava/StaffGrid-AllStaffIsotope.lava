{% comment %}
{% assign staffGroupId = "318383" %}
{% assign staffGroupTitle = "All Staff" %}
{% endcomment %}

{% assign campusFilter = PageParameter.campus | SanitizeSQL | Downcase %}
{% assign deptFilter = PageParameter.department | SanitizeSQL | Downcase %}

{% if campusFilter == "" and deptFilter == "" %}
{% assign deptFilter = 'central-lead-team' %}
{% endif %}

{%- sql -%}
  SELECT
	gm.GroupId,
	g.Name,
	gt.Id as GroupTypeId,
	gtr.IsLeader,
	gm.GroupRoleId,
	p.Id as PersonId,
	p.NickName,
	p.FirstName,
	p.LastName,
	p.Email,
	AVPosition.Value as 'Position',
	AVPhone.Value as 'Phone',
	AVBio.Value as 'Bio',
	DVCampus.Value as 'Campus',
	DVDept.Value as 'Department'
  FROM [Person] p
  LEFT OUTER JOIN [GroupMember] gm ON p.Id = gm.PersonId
  LEFT OUTER JOIN [Group] g ON gm.GroupId = g.Id
  LEFT OUTER JOIN [GroupType] gt ON g.GroupTypeId = gt.Id
  LEFT OUTER JOIN [GroupTypeRole] gtr ON gt.Id = gtr.GroupTypeId
  LEFT OUTER JOIN AttributeValue AVPosition ON AVPosition.EntityId = p.Id AND AVPosition.AttributeId = 2707
  LEFT OUTER JOIN AttributeValue AVPhone ON AVPhone.EntityId = gm.Id AND AVPhone.AttributeId = 37099
  LEFT OUTER JOIN AttributeValue AVBio ON AVBio.EntityId = gm.Id AND AVBio.AttributeId = 37100
  LEFT OUTER JOIN AttributeValue AVCampus ON AVCampus.EntityId = gm.Id AND AVCampus.AttributeId = 42479
  LEFT OUTER JOIN AttributeValue AVDept ON AVDept.EntityId = gm.Id AND AVDept.AttributeId = 42480
  LEFT OUTER JOIN DefinedValue DVCampus ON CONVERT(VARCHAR(255), DVCampus.Guid) = AVCampus.Value
  LEFT OUTER JOIN DefinedValue DVDept ON CONVERT(VARCHAR(255), DVDept.Guid) = AVDept.Value
  WHERE
	(gm.GroupId = '{{staffGroupId}}') and (gm.GroupRoleId = gtr.Id)
  ORDER BY gm.GroupId, gtr.IsLeader desc, p.LastName
{%- endsql -%}

<div class="staff-list">
	<h2 class="section__title">{{ staffGroupTitle }}</h2>
    <div class="filters flex-row-sm">

      <div class="form-group">
        <label for="campusSelect">Campus</label>
        <select class="filter-select" value-group="campus" id="campusSelect">
          <option value="">any</option>
          {% definedvalue where:'DefinedTypeId==119' sort:'Value' %}
          {% for item in definedvalueItems %}
          {% assign selected = "" %}
          {% assign itemValue = item.Value | ToCssClass %}
          {% if campusFilter == itemValue %}{% assign selected = "selected" %}{% endif %}
            <option value=".{{ itemValue }}" {{selected}}>{{ item.Value }}</option>
          {% endfor %}
          {% enddefinedvalue %}
        </select>
      </div>

      <div class="form-group">
        <label for="departmentSelect">Department</label>
        <select class="filter-select" value-group="department" id="departmentSelect">
          <option value="">any</option>
          {% definedvalue where:'DefinedTypeId==120' sort:'Value' %}
          {% for item in definedvalueItems %}
          {% assign itemValue = item.Value | ToCssClass %}
          {% assign selected = "" %}
          {% if deptFilter == itemValue %}{% assign selected = "selected" %}{% endif %}
            <option value=".{{ itemValue }}" {{selected}}>{{ item.Value }}</option>
          {% endfor %}
          {% enddefinedvalue %}
        </select>
      </div>

      <div class="form-group">
        <input type="text" class="form-control" id="searchInput" placeholder="Search by Name or Position" />
      </div>

    </div>
    <div class="staff-grid">
	{%- for item in results -%}
	{%- assign personId = item.PersonId -%}
	{%- assign groupId = item.GroupId -%}
	{%- assign nickName = item.NickName -%}
	{%- assign firstName = item.FirstName -%}
	{%- assign lastName = item.LastName -%}
	{%- assign email = item.Email -%}
	{%- assign emailParts = email | Split:'@' -%}
	{%- assign extension = '' -%}
	{%- assign title = item.Position -%}
	{%- assign phone = item.Phone -%}
  	{%- assign bio = item.Bio -%}
	{%- assign memberCampus = item.Campus -%}
	{%- assign memberDepartment = item.Department -%}
	{%- assign person = item.PersonId | PersonById -%}
	{%- assign colPos = forloop.index0 | Modulo:5 | Plus:1 -%}
	{%- assign rowPos = forloop.index | DividedBy:5 | Ceiling -%}

  	<div class='staff-grid__item {{ memberCampus | ToCssClass }} {{ memberDepartment | ToCssClass }}'>
			<div class="staff__item">
				<div class="row">
					<div class="col-sm-12 col-md-12">
      		  <div class="staff__photo">
      			  {%- if bio != "" and bio != null -%}
      				  <a class="staff__detail-link" href="/staff/{{groupId}}/{{firstName}}-{{lastName}}" title="{{ person.FullName }}">
      				{%- endif -%}
                <img class="staff__detail-image lazyload" src="/GetImage.ashx?id={{ person.PhotoId }}&w=300&h=300&mode=crop" width="300" height="300" alt="{{ person.FullName }}" loading="lazy" />
      				{%- if bio != "" and bio != null -%}
                <span class="vc">Read Bio</span>
                </a>
      				{%- endif -%}
      		  </div>
            <div class="staff__name">{{ person.FullName }}</div>
      			<div class="staff__title">{{ title }}</div>
      			<ul class="staff__meta">
      			  {% if email != '' %}
              <li class="staff__email" id="contact-{{ person.FullName | ToCssClass }}" class="mailtolink">
                <a href="/staff/{{groupId}}/{{firstName}}-{{lastName}}" title="Email {{ person.FullName }}" target="_blank" rel="noreferrer"><i class="nv-icon nv-icon--email"></i></a>
              </li>
              <script>
              var linkelement = document.getElementById('contact-{{person.FullName | ToCssClass}}'),
              u{{personId}}="{{emailParts[0]}}",
              h{{personId}}="{{emailParts[1]}}";
              linkelement.innerHTML = '<a href="' + 'mail' + 'to:'+u{{personId}}+'@'+h{{personId}}+'" title="Email {{ person.FullName }}" target="_blank" rel="noreferrer"><i class="nv-icon nv-icon--email"></i></a>';
              </script>
              {% endif %}
              {% if phone != '' and phone != null %}
                <li class="staff__phone"><a href="tel:+1{{ phone | Replace:'.','' | Replace:'-','' }}" title="Call {{ person.FullName }}"><i class="nv-icon nv-icon--phone"></i></a></li>
              {% endif %}
      		  </ul>
    		  </div>
        </div>
  		</div>
		</div>

	{%- endfor -%}
	</div>
</div>
<link rel="stylesheet" href="/Themes/NorthviewChurch/Assets/Scripts/select2/dist/css/select2.min.css" />
<script src="/Themes/NorthviewChurch/Assets/Scripts/select2/dist/js/select2.min.js"></script>
<script src="https://unpkg.com/isotope-layout@3/dist/isotope.pkgd.min.js"></script>
<script src="https://unpkg.com/imagesloaded@4/imagesloaded.pkgd.min.js"></script>
<script>
  $(document).ready(function() {
    /** Select2 **/
    $('.filter-select').select2({
      theme:'northview'
    });
  });
</script>
<script>
// external js: isotope.pkgd.js

// store filter for each group
var filters = {};
var filterValue = '';
var initFilter = false;
// quick search regex
var qsRegex;

{% if campusFilter and campusFilter != "" %}
filterValue += ".{{campusFilter}}";
initFilter = true;
{% endif %}
{% if deptFilter and deptFilter != "" %}
filterValue += ".{{deptFilter}}";
initFilter = true;
{% endif %}

// reveal all items after init
//  var $items = $grid.find('.isotope_item');
//  $grid.imagesLoaded().progress( function() {
//    $grid.addClass('is-showing-items').isotope('layout');
//  });
//  $grid.isotope( 'revealItemElements', $items );

// init Isotope
var $grid = $('.staff-grid').isotope({
  layoutMode: 'fitRows',
  itemSelector: '.staff-grid__item',
  initLayout: initFilter,
  filter: function() {
    var $this = $(this);
    var menuResult = filterValue ? $this.is( filterValue ) : true;
    var searchResult = qsRegex ? $this.text().match( qsRegex ) : true;
    return searchResult && menuResult;
  }
});

if (!initFilter) {
  $grid.isotope({ filter: '.central-lead-team' });
}

// reveal all items after init
var $items = $grid.find('.staff-grid__item');
$grid.imagesLoaded().progress( function() {
  $grid.addClass('is-showing-items').isotope('layout');
});

$('.filters').on( 'change', function( event ) {
  var $select = $( event.target );
  // get group key
  var filterGroup = $select.attr('value-group');
  // set filter for group
  filters[ filterGroup ] = event.target.value;
  // combine filters
  filterValue = concatValues( filters );
  // set filter for Isotope
  $grid.isotope({ filter:filterValue });

//  alert(filterValue);

});

// quick search regex
var qsRegex;

// use value of search field to filter
var $quicksearch = $('#searchInput').keyup( debounce( function() {
  qsRegex = new RegExp( $quicksearch.val(), 'gi' );
  $grid.isotope({
    filter: function() {
      return qsRegex ? $(this).text().match( qsRegex ) : true;
    }
  });
}, 200 ) );

// debounce so filtering doesn't happen every millisecond
function debounce( fn, threshold ) {
  var timeout;
  threshold = threshold || 100;
  return function debounced() {
    clearTimeout( timeout );
    var args = arguments;
    var _this = this;
    function delayed() {
      fn.apply( _this, args );
    }
    timeout = setTimeout( delayed, threshold );
  };
}

// flatten object by concatting values
function concatValues( obj ) {
  var value = '';
  for ( var prop in obj ) {
    value += obj[ prop ];
  }
  return value;
}
</script>
<script>
/*
  if ('loading' in HTMLImageElement.prototype) {
      const images = document.querySelectorAll("img.lazyload");
      images.forEach(img => {
          img.src = img.dataset.src;
      });
  } else {
      // Dynamically import the LazySizes library
    let script = document.createElement("script");
    script.async = true;
    script.src =
      "https://cdnjs.cloudflare.com/ajax/libs/lazysizes/4.1.8/lazysizes.min.js";
    document.body.appendChild(script);
  }
*/
</script>
